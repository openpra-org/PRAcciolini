from __future__ import annotations

import flatbuffers
import numpy as np

import typing
from canopy.io.Operator import Operator
from canopy.io.Tensor import Tensor

uoffset: typing.TypeAlias = flatbuffers.number_types.UOffsetTFlags.py_type

class SubGraph(object):
  @classmethod
  def GetRootAs(cls, buf: bytes, offset: int) -> SubGraph: ...
  @classmethod
  def GetRootAsSubGraph(cls, buf: bytes, offset: int) -> SubGraph: ...
  @classmethod
  def SubGraphBufferHasIdentifier(cls, buf: bytes, offset: int, size_prefixed: bool) -> bool: ...
  def Init(self, buf: bytes, pos: int) -> None: ...
  def Tensors(self, i: int) -> Tensor | None: ...
  def TensorsLength(self) -> int: ...
  def TensorsIsNone(self) -> bool: ...
  def Inputs(self, i: int) -> typing.List[int]: ...
  def InputsAsNumpy(self) -> np.ndarray: ...
  def InputsLength(self) -> int: ...
  def InputsIsNone(self) -> bool: ...
  def Outputs(self, i: int) -> typing.List[int]: ...
  def OutputsAsNumpy(self) -> np.ndarray: ...
  def OutputsLength(self) -> int: ...
  def OutputsIsNone(self) -> bool: ...
  def Operators(self, i: int) -> Operator | None: ...
  def OperatorsLength(self) -> int: ...
  def OperatorsIsNone(self) -> bool: ...
  def Name(self) -> str | None: ...
def SubGraphStart(builder: flatbuffers.Builder) -> None: ...
def Start(builder: flatbuffers.Builder) -> None: ...
def SubGraphAddTensors(builder: flatbuffers.Builder, tensors: uoffset) -> None: ...
def SubGraphStartTensorsVector(builder: flatbuffers.Builder, num_elems: int) -> uoffset: ...
def StartTensorsVector(builder: flatbuffers.Builder, num_elems: int) -> uoffset: ...
def SubGraphAddInputs(builder: flatbuffers.Builder, inputs: uoffset) -> None: ...
def SubGraphStartInputsVector(builder: flatbuffers.Builder, num_elems: int) -> uoffset: ...
def StartInputsVector(builder: flatbuffers.Builder, num_elems: int) -> uoffset: ...
def SubGraphAddOutputs(builder: flatbuffers.Builder, outputs: uoffset) -> None: ...
def SubGraphStartOutputsVector(builder: flatbuffers.Builder, num_elems: int) -> uoffset: ...
def StartOutputsVector(builder: flatbuffers.Builder, num_elems: int) -> uoffset: ...
def SubGraphAddOperators(builder: flatbuffers.Builder, operators: uoffset) -> None: ...
def SubGraphStartOperatorsVector(builder: flatbuffers.Builder, num_elems: int) -> uoffset: ...
def StartOperatorsVector(builder: flatbuffers.Builder, num_elems: int) -> uoffset: ...
def SubGraphAddName(builder: flatbuffers.Builder, name: uoffset) -> None: ...
def SubGraphEnd(builder: flatbuffers.Builder) -> uoffset: ...
def End(builder: flatbuffers.Builder) -> uoffset: ...

