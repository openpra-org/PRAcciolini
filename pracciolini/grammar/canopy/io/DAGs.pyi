from __future__ import annotations

import flatbuffers

import typing
from canopy.io.Buffer import Buffer
from canopy.io.SubGraph import SubGraph

uoffset: typing.TypeAlias = flatbuffers.number_types.UOffsetTFlags.py_type

class DAGs(object):
  @classmethod
  def GetRootAs(cls, buf: bytes, offset: int) -> DAGs: ...
  @classmethod
  def GetRootAsDAGs(cls, buf: bytes, offset: int) -> DAGs: ...
  @classmethod
  def DAGsBufferHasIdentifier(cls, buf: bytes, offset: int, size_prefixed: bool) -> bool: ...
  def Init(self, buf: bytes, pos: int) -> None: ...
  def Subgraphs(self, i: int) -> SubGraph | None: ...
  def SubgraphsLength(self) -> int: ...
  def SubgraphsIsNone(self) -> bool: ...
  def Buffers(self, i: int) -> Buffer | None: ...
  def BuffersLength(self) -> int: ...
  def BuffersIsNone(self) -> bool: ...
  def Name(self) -> str | None: ...
  def Description(self) -> str | None: ...
def DAGsStart(builder: flatbuffers.Builder) -> None: ...
def Start(builder: flatbuffers.Builder) -> None: ...
def DAGsAddSubgraphs(builder: flatbuffers.Builder, subgraphs: uoffset) -> None: ...
def DAGsStartSubgraphsVector(builder: flatbuffers.Builder, num_elems: int) -> uoffset: ...
def StartSubgraphsVector(builder: flatbuffers.Builder, num_elems: int) -> uoffset: ...
def DAGsAddBuffers(builder: flatbuffers.Builder, buffers: uoffset) -> None: ...
def DAGsStartBuffersVector(builder: flatbuffers.Builder, num_elems: int) -> uoffset: ...
def StartBuffersVector(builder: flatbuffers.Builder, num_elems: int) -> uoffset: ...
def DAGsAddName(builder: flatbuffers.Builder, name: uoffset) -> None: ...
def DAGsAddDescription(builder: flatbuffers.Builder, description: uoffset) -> None: ...
def DAGsEnd(builder: flatbuffers.Builder) -> uoffset: ...
def End(builder: flatbuffers.Builder) -> uoffset: ...

