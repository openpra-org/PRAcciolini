# Generated from ftrex_ftp.g4 by ANTLR 4.13.1
import sys
from antlr4 import Lexer, ATNDeserializer, DFA, LexerATNSimulator, PredictionContextCache
from typing import TextIO


def serializedATN():
    return [
        4, 0, 14, 140, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2, 4, 7, 4, 2, 5, 7, 5,
        2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2, 10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2,
        13, 7, 13, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 4,
        1, 4, 1, 5, 1, 5, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 7, 1, 7, 1, 7, 1, 7,
        1, 7, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9,
        1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 10, 4, 10, 98, 8, 10, 11, 10, 12, 10, 99, 1, 11, 3, 11, 103,
        8, 11, 1, 11, 4, 11, 106, 8, 11, 11, 11, 12, 11, 107, 1, 11, 1, 11, 4, 11, 112, 8, 11,
        11, 11, 12, 11, 113, 3, 11, 116, 8, 11, 1, 11, 1, 11, 3, 11, 120, 8, 11, 1, 11, 4, 11,
        123, 8, 11, 11, 11, 12, 11, 124, 3, 11, 127, 8, 11, 1, 12, 4, 12, 130, 8, 12, 11, 12,
        12, 12, 131, 1, 13, 4, 13, 135, 8, 13, 11, 13, 12, 13, 136, 1, 13, 1, 13, 0, 0, 14, 1,
        1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25, 13, 27,
        14, 1, 0, 6, 5, 0, 45, 45, 47, 57, 65, 90, 95, 95, 97, 122, 2, 0, 43, 43, 45, 45, 1, 0,
        48, 57, 2, 0, 69, 69, 101, 101, 2, 0, 10, 10, 13, 13, 2, 0, 9, 9, 32, 32, 149, 0, 1, 1,
        0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0,
        0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0,
        0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0, 1, 29, 1, 0, 0, 0, 3, 37, 1, 0, 0,
        0, 5, 45, 1, 0, 0, 0, 7, 52, 1, 0, 0, 0, 9, 58, 1, 0, 0, 0, 11, 60, 1, 0, 0, 0, 13, 62, 1, 0,
        0, 0, 15, 71, 1, 0, 0, 0, 17, 76, 1, 0, 0, 0, 19, 86, 1, 0, 0, 0, 21, 97, 1, 0, 0, 0, 23, 102,
        1, 0, 0, 0, 25, 129, 1, 0, 0, 0, 27, 134, 1, 0, 0, 0, 29, 30, 5, 69, 0, 0, 30, 31, 5, 78,
        0, 0, 31, 32, 5, 68, 0, 0, 32, 33, 5, 84, 0, 0, 33, 34, 5, 82, 0, 0, 34, 35, 5, 69, 0, 0,
        35, 36, 5, 69, 0, 0, 36, 2, 1, 0, 0, 0, 37, 38, 5, 80, 0, 0, 38, 39, 5, 82, 0, 0, 39, 40,
        5, 79, 0, 0, 40, 41, 5, 67, 0, 0, 41, 42, 5, 69, 0, 0, 42, 43, 5, 83, 0, 0, 43, 44, 5, 83,
        0, 0, 44, 4, 1, 0, 0, 0, 45, 46, 5, 73, 0, 0, 46, 47, 5, 77, 0, 0, 47, 48, 5, 80, 0, 0, 48,
        49, 5, 79, 0, 0, 49, 50, 5, 82, 0, 0, 50, 51, 5, 84, 0, 0, 51, 6, 1, 0, 0, 0, 52, 53, 5, 76,
        0, 0, 53, 54, 5, 73, 0, 0, 54, 55, 5, 77, 0, 0, 55, 56, 5, 73, 0, 0, 56, 57, 5, 84, 0, 0,
        57, 8, 1, 0, 0, 0, 58, 59, 5, 42, 0, 0, 59, 10, 1, 0, 0, 0, 60, 61, 5, 43, 0, 0, 61, 12, 1,
        0, 0, 0, 62, 63, 5, 42, 0, 0, 63, 64, 5, 42, 0, 0, 64, 65, 5, 67, 0, 0, 65, 66, 5, 72, 0,
        0, 66, 67, 5, 65, 0, 0, 67, 68, 5, 82, 0, 0, 68, 69, 5, 51, 0, 0, 69, 70, 5, 50, 0, 0, 70,
        14, 1, 0, 0, 0, 71, 72, 5, 42, 0, 0, 72, 73, 5, 88, 0, 0, 73, 74, 5, 69, 0, 0, 74, 75, 5,
        81, 0, 0, 75, 16, 1, 0, 0, 0, 76, 77, 5, 42, 0, 0, 77, 78, 5, 42, 0, 0, 78, 79, 5, 68, 0,
        0, 79, 80, 5, 66, 0, 0, 80, 81, 5, 78, 0, 0, 81, 82, 5, 65, 0, 0, 82, 83, 5, 77, 0, 0, 83,
        84, 5, 69, 0, 0, 84, 85, 5, 58, 0, 0, 85, 18, 1, 0, 0, 0, 86, 87, 5, 42, 0, 0, 87, 88, 5,
        42, 0, 0, 88, 89, 5, 70, 0, 0, 89, 90, 5, 84, 0, 0, 90, 91, 5, 73, 0, 0, 91, 92, 5, 84, 0,
        0, 92, 93, 5, 76, 0, 0, 93, 94, 5, 69, 0, 0, 94, 95, 5, 58, 0, 0, 95, 20, 1, 0, 0, 0, 96,
        98, 7, 0, 0, 0, 97, 96, 1, 0, 0, 0, 98, 99, 1, 0, 0, 0, 99, 97, 1, 0, 0, 0, 99, 100, 1, 0,
        0, 0, 100, 22, 1, 0, 0, 0, 101, 103, 7, 1, 0, 0, 102, 101, 1, 0, 0, 0, 102, 103, 1, 0, 0,
        0, 103, 105, 1, 0, 0, 0, 104, 106, 7, 2, 0, 0, 105, 104, 1, 0, 0, 0, 106, 107, 1, 0, 0,
        0, 107, 105, 1, 0, 0, 0, 107, 108, 1, 0, 0, 0, 108, 115, 1, 0, 0, 0, 109, 111, 5, 46, 0,
        0, 110, 112, 7, 2, 0, 0, 111, 110, 1, 0, 0, 0, 112, 113, 1, 0, 0, 0, 113, 111, 1, 0, 0,
        0, 113, 114, 1, 0, 0, 0, 114, 116, 1, 0, 0, 0, 115, 109, 1, 0, 0, 0, 115, 116, 1, 0, 0,
        0, 116, 126, 1, 0, 0, 0, 117, 119, 7, 3, 0, 0, 118, 120, 7, 1, 0, 0, 119, 118, 1, 0, 0,
        0, 119, 120, 1, 0, 0, 0, 120, 122, 1, 0, 0, 0, 121, 123, 7, 2, 0, 0, 122, 121, 1, 0, 0,
        0, 123, 124, 1, 0, 0, 0, 124, 122, 1, 0, 0, 0, 124, 125, 1, 0, 0, 0, 125, 127, 1, 0, 0,
        0, 126, 117, 1, 0, 0, 0, 126, 127, 1, 0, 0, 0, 127, 24, 1, 0, 0, 0, 128, 130, 7, 4, 0, 0,
        129, 128, 1, 0, 0, 0, 130, 131, 1, 0, 0, 0, 131, 129, 1, 0, 0, 0, 131, 132, 1, 0, 0, 0,
        132, 26, 1, 0, 0, 0, 133, 135, 7, 5, 0, 0, 134, 133, 1, 0, 0, 0, 135, 136, 1, 0, 0, 0, 136,
        134, 1, 0, 0, 0, 136, 137, 1, 0, 0, 0, 137, 138, 1, 0, 0, 0, 138, 139, 6, 13, 0, 0, 139,
        28, 1, 0, 0, 0, 11, 0, 99, 102, 107, 113, 115, 119, 124, 126, 131, 136, 1, 6, 0, 0
    ]


class FtrexFtpLexer(Lexer):
    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [DFA(ds, i) for i, ds in enumerate(atn.decisionToState)]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    EVENT_ID = 11
    NUMBER = 12
    EOL = 13
    WS = 14

    channelNames = [u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN"]

    modeNames = ["DEFAULT_MODE"]

    literalNames = ["<INVALID>",
                    "'ENDTREE'", "'PROCESS'", "'IMPORT'", "'LIMIT'", "'*'", "'+'",
                    "'**CHAR32'", "'*XEQ'", "'**DBNAME:'", "'**FTITLE:'"]

    symbolicNames = ["<INVALID>",
                     "EVENT_ID", "NUMBER", "EOL", "WS"]

    ruleNames = ["T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6",
                 "T__7", "T__8", "T__9", "EVENT_ID", "NUMBER", "EOL", "WS"]

    grammarFileName = "ftrex_ftp.g4"

    def __init__(self, input=None, output: TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None
